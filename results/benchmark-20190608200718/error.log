
>>>>> Error <<<<<
,PyError ($(Expr(:escape, :(ccall(#= C:\Users\catar\.julia\packages\PyCall\RQjD7\src\pyfncall.jl:44 =# @pysym(:PyObject_Call), PyPtr, (PyPtr, PyPtr, PyPtr), o, pyargsptr, kw))))) <class 'RuntimeError'>
RuntimeError('Julia exception: DomainError with -0.39999999999999997:\nsqrt will only return a complex result if called with a complex argument. Try sqrt(Complex(x)).\nStacktrace:\n [1] throw_complex_domainerror(::Symbol, ::Float64) at .\\math.jl:31\n [2] sqrt at .\\math.jl:492 [inlined]\n [3] #conic_cost_function#9(::Float64, ::Function, ::Array{Int64,1}) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\examples\\CaseStudyIP_Conic.jl:19\n [4] conic_cost_function(::Array{Int64,1}) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\examples\\CaseStudyIP_Conic.jl:15\n [5] apply(::Objective, ::Array{Int64,1}) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\Optimization.jl:218\n [6] evaluate(::Objective, ::Array{Int64,1}) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\Optimization.jl:221\n [7] #65 at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\Optimization.jl:593 [inlined]\n [8] (::getfield(Main.MscThesis, Symbol("##64#69")){Array{Int64,1}})(::Objective) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\Utils.jl:144\n [9] iterate at .\\generator.jl:47 [inlined]\n [10] collect_to!(::Array{Float64,1}, ::Base.Generator{Array{AbstractObjective,1},getfield(Main.MscThesis, Symbol("##64#69")){Array{Int64,1}}}, ::Int64, ::Int64) at .\\array.jl:651\n [11] collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{AbstractObjective,1},getfield(Main.MscThesis, Symbol("##64#69")){Array{Int64,1}}}, ::Int64) at .\\array.jl:630\n [12] _collect(::Array{AbstractObjective,1}, ::Base.Generator{Array{AbstractObjective,1},getfield(Main.MscThesis, Symbol("##64#69")){Array{Int64,1}}}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at .\\array.jl:624\n [13] collect_similar at .\\array.jl:548 [inlined]\n [14] map at .\\abstractarray.jl:2018 [inlined]\n [15] macro expansion at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\Utils.jl:142 [inlined]\n [16] (::getfield(Main.MscThesis, Symbol("#eval_objectives#68")){Array{Int64,1},Array{AbstractObjective,1},typeof(Main.MscThesis.flatten)})() at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\Optimization.jl:593\n [17] evaluate(::Array{Int64,1}, ::Array{AbstractObjective,1}, ::Array{Constraint,1}, ::typeof(Main.MscThesis.flatten)) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\Optimization.jl:605\n [18] evaluate at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\Optimization.jl:590 [inlined]\n [19] (::getfield(Main.MscThesis, Symbol("##154#155")){Array{AbstractObjective,1},Array{Constraint,1}})(::Array{Int64,1}) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\solvers\\PlatypusSolver.jl:10\n [20] #invokelatest#1(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::Any, ::Any, ::Vararg{Any,N} where N) at .\\essentials.jl:742\n [21] invokelatest(::Any, ::Any, ::Vararg{Any,N} where N) at .\\essentials.jl:741\n [22] _pyjlwrap_call(::Function, ::Ptr{PyCall.PyObject_struct}, ::Ptr{PyCall.PyObject_struct}) at C:\\Users\\catar\\.julia\\packages\\PyCall\\RQjD7\\src\\callback.jl:28\n [23] pyjlwrap_call(::Ptr{PyCall.PyObject_struct}, ::Ptr{PyCall.PyObject_struct}, ::Ptr{PyCall.PyObject_struct}) at C:\\Users\\catar\\.julia\\packages\\PyCall\\RQjD7\\src\\callback.jl:49\n [24] macro expansion at C:\\Users\\catar\\.julia\\packages\\PyCall\\RQjD7\\src\\exception.jl:81 [inlined]\n [25] __pycall!(::PyCall.PyObject, ::Ptr{PyCall.PyObject_struct}, ::PyCall.PyObject, ::Ptr{Nothing}) at C:\\Users\\catar\\.julia\\packages\\PyCall\\RQjD7\\src\\pyfncall.jl:44\n [26] _pycall!(::PyCall.PyObject, ::PyCall.PyObject, ::Tuple{Int64}, ::Int64, ::Ptr{Nothing}) at C:\\Users\\catar\\.julia\\packages\\PyCall\\RQjD7\\src\\pyfncall.jl:29\n [27] #call#101 at C:\\Users\\catar\\.julia\\packages\\PyCall\\RQjD7\\src\\pyfncall.jl:11 [inlined]\n [28] (::PyCall.PyObject)(::Int64) at C:\\Users\\catar\\.julia\\packages\\PyCall\\RQjD7\\src\\pyfncall.jl:89\n [29] #solve#99(::Int64, ::Bool, ::Bool, ::Bool, ::Bool, ::Function, ::NSGAII) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\solvers\\Platypus.jl:261\n [30] (::getfield(Main.MscThesis.Platypus, Symbol("#kw##solve")))(::NamedTuple{(:max_eval, :nondominated),Tuple{Int64,Bool}}, ::typeof(Main.MscThesis.Platypus.solve), ::NSGAII) at .\\none:0\n [31] solve_it(::PlatypusSolver, ::Model) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\solvers\\PlatypusSolver.jl:292\n [32] (::getfield(Main.MscThesis, Symbol("##73#79")){PlatypusSolver,Model})() at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\Optimization.jl:663\n [33] with(::getfield(Main.MscThesis, Symbol("##73#79")){PlatypusSolver,Model}, ::Parameter{String}, ::String) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\Parameters.jl:20\n [34] #1 at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\Parameters.jl:28 [inlined]\n [35] with(::getfield(Main.MscThesis, Symbol("##1#2")){getfield(Main.MscThesis, Symbol("##73#79")){PlatypusSolver,Model},Tuple{Parameter{String},String}}, ::Parameter{String}, ::String) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\Parameters.jl:20\n [36] with(::Function, ::Parameter{String}, ::String, ::Parameter{String}, ::Vararg{Any,N} where N) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\Parameters.jl:26\n [37] solve(::PlatypusSolver, ::Model) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\Optimization.jl:634\n [38] solve(::Type, ::Dict{Symbol,Int64}, ::Model, ::Int64, ::Bool) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\MscThesis.jl:117\n [39] (::getfield(Main.MscThesis, Symbol("##96#97")){Int64,Model,Int64,String,Array{DataType,1},Array{Dict{Symbol,Int64},1}})() at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\Benchmark.jl:64\n [40] with(::getfield(Main.MscThesis, Symbol("##96#97")){Int64,Model,Int64,String,Array{DataType,1},Array{Dict{Symbol,Int64},1}}, ::Parameter{String}, ::String) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\Parameters.jl:20\n [41] #benchmark#95(::String, ::Int64, ::Array{Tuple{DataType,Dict{Symbol,Int64}},1}, ::Model, ::Int64, ::Function) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\Benchmark.jl:59\n [42] (::getfield(Main.MscThesis, Symbol("#kw##benchmark")))(::NamedTuple{(:nruns, :algorithms, :problem, :max_evals),Tuple{Int64,Array{Tuple{DataType,Dict{Symbol,Int64}},1},Model,Int64}}, ::typeof(benchmark)) at .\\none:0\n [43] top-level scope at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\examples\\CaseStudyIP_Conic.jl:71\n [44] include_string(::Module, ::String, ::String) at .\\loading.jl:1008\n [45] include_string(::Module, ::String, ::String, ::Int64) at C:\\Users\\catar\\.julia\\packages\\CodeTools\\xGemk\\src\\eval.jl:30\n [46] (::getfield(Atom, Symbol("##114#119")){String,Int64,String})() at C:\\Users\\catar\\.julia\\packages\\Atom\\UtmXq\\src\\eval.jl:94\n [47] withpath(::getfield(Atom, Symbol("##114#119")){String,Int64,String}, ::String) at C:\\Users\\catar\\.julia\\packages\\CodeTools\\xGemk\\src\\utils.jl:30\n [48] withpath at C:\\Users\\catar\\.julia\\packages\\Atom\\UtmXq\\src\\eval.jl:46 [inlined]\n [49] #113 at C:\\Users\\catar\\.julia\\packages\\Atom\\UtmXq\\src\\eval.jl:93 [inlined]\n [50] with_logstate(::getfield(Atom, Symbol("##113#118")){String,Int64,String}, ::Base.CoreLogging.LogState) at .\\logging.jl:395\n [51] #112 at .\\logging.jl:491 [inlined]\n [52] hideprompt(::getfield(Atom, Symbol("##112#117")){String,Int64,String}) at C:\\Users\\catar\\.julia\\packages\\Atom\\UtmXq\\src\\repl.jl:87\n [53] macro expansion at C:\\Users\\catar\\.julia\\packages\\Atom\\UtmXq\\src\\eval.jl:91 [inlined]\n [54] (::getfield(Atom, Symbol("##111#116")))(::Dict{String,Any}) at C:\\Users\\catar\\.julia\\packages\\Atom\\UtmXq\\src\\eval.jl:86\n [55] handlemsg(::Dict{String,Any}, ::Dict{String,Any}) at C:\\Users\\catar\\.julia\\packages\\Atom\\UtmXq\\src\\comm.jl:164',)
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\core.py", line 405, in run
    self.step()
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\algorithms.py", line 181, in step
    self.initialize()
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\algorithms.py", line 191, in initialize
    super(NSGAII, self).initialize()
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\algorithms.py", line 72, in initialize
    self.evaluate_all(self.population)
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\core.py", line 378, in evaluate_all
    results = self.evaluator.evaluate_all(jobs)
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\evaluator.py", line 88, in evaluate_all
    return list(self.map_func(run_job, jobs))
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\evaluator.py", line 55, in run_job
    job.run()
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\core.py", line 345, in run
    self.solution.evaluate()
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\core.py", line 518, in evaluate
    self.problem(self)
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\core.py", line 162, in __call__
    self.evaluate(solution)
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\core.py", line 186, in evaluate
    (objs, constrs) = self.function(solution.variables)

Stacktrace:
 [1] pyerr_check at C:\Users\catar\.julia\packages\PyCall\RQjD7\src\exception.jl:60 [inlined]
 [2] pyerr_check at C:\Users\catar\.julia\packages\PyCall\RQjD7\src\exception.jl:64 [inlined]
 [3] macro expansion at C:\Users\catar\.julia\packages\PyCall\RQjD7\src\exception.jl:84 [inlined]
 [4] __pycall!(::PyCall.PyObject, ::Ptr{PyCall.PyObject_struct}, ::PyCall.PyObject, ::Ptr{Nothing}) at C:\Users\catar\.julia\packages\PyCall\RQjD7\src\pyfncall.jl:44
 [5] _pycall!(::PyCall.PyObject, ::PyCall.PyObject, ::Tuple{Int64}, ::Int64, ::Ptr{Nothing}) at C:\Users\catar\.julia\packages\PyCall\RQjD7\src\pyfncall.jl:29
 [6] #call#101 at C:\Users\catar\.julia\packages\PyCall\RQjD7\src\pyfncall.jl:11 [inlined]
 [7] (::PyCall.PyObject)(::Int64) at C:\Users\catar\.julia\packages\PyCall\RQjD7\src\pyfncall.jl:89
 [8] #solve#99(::Int64, ::Bool, ::Bool, ::Bool, ::Bool, ::Function, ::NSGAII) at C:\Users\catar\Projects\Research Projects\MscThesis\src\optimization\solvers\Platypus.jl:261
 [9] (::getfield(Main.MscThesis.Platypus, Symbol("#kw##solve")))(::NamedTuple{(:max_eval, :nondominated),Tuple{Int64,Bool}}, ::typeof(Main.MscThesis.Platypus.solve), ::NSGAII) at .\none:0
 [10] solve_it(::PlatypusSolver, ::Model) at C:\Users\catar\Projects\Research Projects\MscThesis\src\optimization\solvers\PlatypusSolver.jl:292
 [11] (::getfield(Main.MscThesis, Symbol("##73#79")){PlatypusSolver,Model})() at C:\Users\catar\Projects\Research Projects\MscThesis\src\optimization\Optimization.jl:663
 [12] with(::getfield(Main.MscThesis, Symbol("##73#79")){PlatypusSolver,Model}, ::Parameter{String}, ::String) at C:\Users\catar\Projects\Research Projects\MscThesis\src\Parameters.jl:20
 [13] #1 at C:\Users\catar\Projects\Research Projects\MscThesis\src\Parameters.jl:28 [inlined]
 [14] with(::getfield(Main.MscThesis, Symbol("##1#2")){getfield(Main.MscThesis, Symbol("##73#79")){PlatypusSolver,Model},Tuple{Parameter{String},String}}, ::Parameter{String}, ::String) at C:\Users\catar\Projects\Research Projects\MscThesis\src\Parameters.jl:20
 [15] with(::Function, ::Parameter{String}, ::String, ::Parameter{String}, ::Vararg{Any,N} where N) at C:\Users\catar\Projects\Research Projects\MscThesis\src\Parameters.jl:26
 [16] solve(::PlatypusSolver, ::Model) at C:\Users\catar\Projects\Research Projects\MscThesis\src\optimization\Optimization.jl:634
 [17] solve(::Type, ::Dict{Symbol,Int64}, ::Model, ::Int64, ::Bool) at C:\Users\catar\Projects\Research Projects\MscThesis\src\MscThesis.jl:117
 [18] (::getfield(Main.MscThesis, Symbol("##96#97")){Int64,Model,Int64,String,Array{DataType,1},Array{Dict{Symbol,Int64},1}})() at C:\Users\catar\Projects\Research Projects\MscThesis\src\Benchmark.jl:64
 [19] with(::getfield(Main.MscThesis, Symbol("##96#97")){Int64,Model,Int64,String,Array{DataType,1},Array{Dict{Symbol,Int64},1}}, ::Parameter{String}, ::String) at C:\Users\catar\Projects\Research Projects\MscThesis\src\Parameters.jl:20
 [20] #benchmark#95(::String, ::Int64, ::Array{Tuple{DataType,Dict{Symbol,Int64}},1}, ::Model, ::Int64, ::Function) at C:\Users\catar\Projects\Research Projects\MscThesis\src\Benchmark.jl:59
 [21] (::getfield(Main.MscThesis, Symbol("#kw##benchmark")))(::NamedTuple{(:nruns, :algorithms, :problem, :max_evals),Tuple{Int64,Array{Tuple{DataType,Dict{Symbol,Int64}},1},Model,Int64}}, ::typeof(benchmark)) at .\none:0
 [22] top-level scope at C:\Users\catar\Projects\Research Projects\MscThesis\examples\CaseStudyIP_Conic.jl:71
 [23] include_string(::Module, ::String, ::String) at .\loading.jl:1008
 [24] include_string(::Module, ::String, ::String, ::Int64) at C:\Users\catar\.julia\packages\CodeTools\xGemk\src\eval.jl:30
 [25] (::getfield(Atom, Symbol("##114#119")){String,Int64,String})() at C:\Users\catar\.julia\packages\Atom\UtmXq\src\eval.jl:94
 [26] withpath(::getfield(Atom, Symbol("##114#119")){String,Int64,String}, ::String) at C:\Users\catar\.julia\packages\CodeTools\xGemk\src\utils.jl:30
 [27] withpath at C:\Users\catar\.julia\packages\Atom\UtmXq\src\eval.jl:46 [inlined]
 [28] #113 at C:\Users\catar\.julia\packages\Atom\UtmXq\src\eval.jl:93 [inlined]
 [29] with_logstate(::getfield(Atom, Symbol("##113#118")){String,Int64,String}, ::Base.CoreLogging.LogState) at .\logging.jl:395
 [30] #112 at .\logging.jl:491 [inlined]
 [31] hideprompt(::getfield(Atom, Symbol("##112#117")){String,Int64,String}) at C:\Users\catar\.julia\packages\Atom\UtmXq\src\repl.jl:87
 [32] macro expansion at C:\Users\catar\.julia\packages\Atom\UtmXq\src\eval.jl:91 [inlined]
 [33] (::getfield(Atom, Symbol("##111#116")))(::Dict{String,Any}) at C:\Users\catar\.julia\packages\Atom\UtmXq\src\eval.jl:86
 [34] handlemsg(::Dict{String,Any}, ::Dict{String,Any}) at C:\Users\catar\.julia\packages\Atom\UtmXq\src\comm.jl:164
 [35] (::getfield(Atom, Symbol("##19#21")){Array{Any,1}})() at .\task.jl:259

>>>>> Error <<<<<
,PyError ($(Expr(:escape, :(ccall(#= C:\Users\catar\.julia\packages\PyCall\RQjD7\src\pyfncall.jl:44 =# @pysym(:PyObject_Call), PyPtr, (PyPtr, PyPtr, PyPtr), o, pyargsptr, kw))))) <class 'RuntimeError'>
RuntimeError('Julia exception: DomainError with -0.5:\nsqrt will only return a complex result if called with a complex argument. Try sqrt(Complex(x)).\nStacktrace:\n [1] throw_complex_domainerror(::Symbol, ::Float64) at .\\math.jl:31\n [2] sqrt at .\\math.jl:492 [inlined]\n [3] #conic_cost_function#9(::Float64, ::Function, ::Array{Int64,1}) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\examples\\CaseStudyIP_Conic.jl:19\n [4] conic_cost_function(::Array{Int64,1}) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\examples\\CaseStudyIP_Conic.jl:15\n [5] apply(::Objective, ::Array{Int64,1}) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\Optimization.jl:218\n [6] evaluate(::Objective, ::Array{Int64,1}) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\Optimization.jl:221\n [7] #65 at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\Optimization.jl:593 [inlined]\n [8] (::getfield(Main.MscThesis, Symbol("##64#69")){Array{Int64,1}})(::Objective) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\Utils.jl:144\n [9] iterate at .\\generator.jl:47 [inlined]\n [10] collect_to!(::Array{Float64,1}, ::Base.Generator{Array{AbstractObjective,1},getfield(Main.MscThesis, Symbol("##64#69")){Array{Int64,1}}}, ::Int64, ::Int64) at .\\array.jl:651\n [11] collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{AbstractObjective,1},getfield(Main.MscThesis, Symbol("##64#69")){Array{Int64,1}}}, ::Int64) at .\\array.jl:630\n [12] _collect(::Array{AbstractObjective,1}, ::Base.Generator{Array{AbstractObjective,1},getfield(Main.MscThesis, Symbol("##64#69")){Array{Int64,1}}}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at .\\array.jl:624\n [13] collect_similar at .\\array.jl:548 [inlined]\n [14] map at .\\abstractarray.jl:2018 [inlined]\n [15] macro expansion at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\Utils.jl:142 [inlined]\n [16] (::getfield(Main.MscThesis, Symbol("#eval_objectives#68")){Array{Int64,1},Array{AbstractObjective,1},typeof(Main.MscThesis.flatten)})() at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\Optimization.jl:593\n [17] evaluate(::Array{Int64,1}, ::Array{AbstractObjective,1}, ::Array{Constraint,1}, ::typeof(Main.MscThesis.flatten)) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\Optimization.jl:605\n [18] evaluate at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\Optimization.jl:590 [inlined]\n [19] (::getfield(Main.MscThesis, Symbol("##154#155")){Array{AbstractObjective,1},Array{Constraint,1}})(::Array{Int64,1}) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\solvers\\PlatypusSolver.jl:10\n [20] #invokelatest#1(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::Any, ::Any, ::Vararg{Any,N} where N) at .\\essentials.jl:742\n [21] invokelatest(::Any, ::Any, ::Vararg{Any,N} where N) at .\\essentials.jl:741\n [22] _pyjlwrap_call(::Function, ::Ptr{PyCall.PyObject_struct}, ::Ptr{PyCall.PyObject_struct}) at C:\\Users\\catar\\.julia\\packages\\PyCall\\RQjD7\\src\\callback.jl:28\n [23] pyjlwrap_call(::Ptr{PyCall.PyObject_struct}, ::Ptr{PyCall.PyObject_struct}, ::Ptr{PyCall.PyObject_struct}) at C:\\Users\\catar\\.julia\\packages\\PyCall\\RQjD7\\src\\callback.jl:49\n [24] macro expansion at C:\\Users\\catar\\.julia\\packages\\PyCall\\RQjD7\\src\\exception.jl:81 [inlined]\n [25] __pycall!(::PyCall.PyObject, ::Ptr{PyCall.PyObject_struct}, ::PyCall.PyObject, ::Ptr{Nothing}) at C:\\Users\\catar\\.julia\\packages\\PyCall\\RQjD7\\src\\pyfncall.jl:44\n [26] _pycall!(::PyCall.PyObject, ::PyCall.PyObject, ::Tuple{Int64}, ::Int64, ::Ptr{Nothing}) at C:\\Users\\catar\\.julia\\packages\\PyCall\\RQjD7\\src\\pyfncall.jl:29\n [27] #call#101 at C:\\Users\\catar\\.julia\\packages\\PyCall\\RQjD7\\src\\pyfncall.jl:11 [inlined]\n [28] (::PyCall.PyObject)(::Int64) at C:\\Users\\catar\\.julia\\packages\\PyCall\\RQjD7\\src\\pyfncall.jl:89\n [29] #solve#99(::Int64, ::Bool, ::Bool, ::Bool, ::Bool, ::Function, ::NSGAII) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\solvers\\Platypus.jl:261\n [30] (::getfield(Main.MscThesis.Platypus, Symbol("#kw##solve")))(::NamedTuple{(:max_eval, :nondominated),Tuple{Int64,Bool}}, ::typeof(Main.MscThesis.Platypus.solve), ::NSGAII) at .\\none:0\n [31] solve_it(::PlatypusSolver, ::Model) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\solvers\\PlatypusSolver.jl:292\n [32] (::getfield(Main.MscThesis, Symbol("##73#79")){PlatypusSolver,Model})() at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\Optimization.jl:663\n [33] with(::getfield(Main.MscThesis, Symbol("##73#79")){PlatypusSolver,Model}, ::Parameter{String}, ::String) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\Parameters.jl:20\n [34] #1 at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\Parameters.jl:28 [inlined]\n [35] with(::getfield(Main.MscThesis, Symbol("##1#2")){getfield(Main.MscThesis, Symbol("##73#79")){PlatypusSolver,Model},Tuple{Parameter{String},String}}, ::Parameter{String}, ::String) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\Parameters.jl:20\n [36] with(::Function, ::Parameter{String}, ::String, ::Parameter{String}, ::Vararg{Any,N} where N) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\Parameters.jl:26\n [37] solve(::PlatypusSolver, ::Model) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\Optimization.jl:634\n [38] solve(::Type, ::Dict{Symbol,Int64}, ::Model, ::Int64, ::Bool) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\MscThesis.jl:117\n [39] (::getfield(Main.MscThesis, Symbol("##96#97")){Int64,Model,Int64,String,Array{DataType,1},Array{Dict{Symbol,Int64},1}})() at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\Benchmark.jl:64\n [40] with(::getfield(Main.MscThesis, Symbol("##96#97")){Int64,Model,Int64,String,Array{DataType,1},Array{Dict{Symbol,Int64},1}}, ::Parameter{String}, ::String) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\Parameters.jl:20\n [41] #benchmark#95(::String, ::Int64, ::Array{Tuple{DataType,Dict{Symbol,Int64}},1}, ::Model, ::Int64, ::Function) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\Benchmark.jl:59\n [42] (::getfield(Main.MscThesis, Symbol("#kw##benchmark")))(::NamedTuple{(:nruns, :algorithms, :problem, :max_evals),Tuple{Int64,Array{Tuple{DataType,Dict{Symbol,Int64}},1},Model,Int64}}, ::typeof(benchmark)) at .\\none:0\n [43] top-level scope at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\examples\\CaseStudyIP_Conic.jl:71\n [44] include_string(::Module, ::String, ::String) at .\\loading.jl:1008\n [45] include_string(::Module, ::String, ::String, ::Int64) at C:\\Users\\catar\\.julia\\packages\\CodeTools\\xGemk\\src\\eval.jl:30\n [46] (::getfield(Atom, Symbol("##114#119")){String,Int64,String})() at C:\\Users\\catar\\.julia\\packages\\Atom\\UtmXq\\src\\eval.jl:94\n [47] withpath(::getfield(Atom, Symbol("##114#119")){String,Int64,String}, ::String) at C:\\Users\\catar\\.julia\\packages\\CodeTools\\xGemk\\src\\utils.jl:30\n [48] withpath at C:\\Users\\catar\\.julia\\packages\\Atom\\UtmXq\\src\\eval.jl:46 [inlined]\n [49] #113 at C:\\Users\\catar\\.julia\\packages\\Atom\\UtmXq\\src\\eval.jl:93 [inlined]\n [50] with_logstate(::getfield(Atom, Symbol("##113#118")){String,Int64,String}, ::Base.CoreLogging.LogState) at .\\logging.jl:395\n [51] #112 at .\\logging.jl:491 [inlined]\n [52] hideprompt(::getfield(Atom, Symbol("##112#117")){String,Int64,String}) at C:\\Users\\catar\\.julia\\packages\\Atom\\UtmXq\\src\\repl.jl:87\n [53] macro expansion at C:\\Users\\catar\\.julia\\packages\\Atom\\UtmXq\\src\\eval.jl:91 [inlined]\n [54] (::getfield(Atom, Symbol("##111#116")))(::Dict{String,Any}) at C:\\Users\\catar\\.julia\\packages\\Atom\\UtmXq\\src\\eval.jl:86\n [55] handlemsg(::Dict{String,Any}, ::Dict{String,Any}) at C:\\Users\\catar\\.julia\\packages\\Atom\\UtmXq\\src\\comm.jl:164',)
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\core.py", line 405, in run
    self.step()
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\algorithms.py", line 181, in step
    self.initialize()
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\algorithms.py", line 191, in initialize
    super(NSGAII, self).initialize()
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\algorithms.py", line 72, in initialize
    self.evaluate_all(self.population)
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\core.py", line 378, in evaluate_all
    results = self.evaluator.evaluate_all(jobs)
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\evaluator.py", line 88, in evaluate_all
    return list(self.map_func(run_job, jobs))
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\evaluator.py", line 55, in run_job
    job.run()
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\core.py", line 345, in run
    self.solution.evaluate()
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\core.py", line 518, in evaluate
    self.problem(self)
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\core.py", line 162, in __call__
    self.evaluate(solution)
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\core.py", line 186, in evaluate
    (objs, constrs) = self.function(solution.variables)

Stacktrace:
 [1] pyerr_check at C:\Users\catar\.julia\packages\PyCall\RQjD7\src\exception.jl:60 [inlined]
 [2] pyerr_check at C:\Users\catar\.julia\packages\PyCall\RQjD7\src\exception.jl:64 [inlined]
 [3] macro expansion at C:\Users\catar\.julia\packages\PyCall\RQjD7\src\exception.jl:84 [inlined]
 [4] __pycall!(::PyCall.PyObject, ::Ptr{PyCall.PyObject_struct}, ::PyCall.PyObject, ::Ptr{Nothing}) at C:\Users\catar\.julia\packages\PyCall\RQjD7\src\pyfncall.jl:44
 [5] _pycall!(::PyCall.PyObject, ::PyCall.PyObject, ::Tuple{Int64}, ::Int64, ::Ptr{Nothing}) at C:\Users\catar\.julia\packages\PyCall\RQjD7\src\pyfncall.jl:29
 [6] #call#101 at C:\Users\catar\.julia\packages\PyCall\RQjD7\src\pyfncall.jl:11 [inlined]
 [7] (::PyCall.PyObject)(::Int64) at C:\Users\catar\.julia\packages\PyCall\RQjD7\src\pyfncall.jl:89
 [8] #solve#99(::Int64, ::Bool, ::Bool, ::Bool, ::Bool, ::Function, ::NSGAII) at C:\Users\catar\Projects\Research Projects\MscThesis\src\optimization\solvers\Platypus.jl:261
 [9] (::getfield(Main.MscThesis.Platypus, Symbol("#kw##solve")))(::NamedTuple{(:max_eval, :nondominated),Tuple{Int64,Bool}}, ::typeof(Main.MscThesis.Platypus.solve), ::NSGAII) at .\none:0
 [10] solve_it(::PlatypusSolver, ::Model) at C:\Users\catar\Projects\Research Projects\MscThesis\src\optimization\solvers\PlatypusSolver.jl:292
 [11] (::getfield(Main.MscThesis, Symbol("##73#79")){PlatypusSolver,Model})() at C:\Users\catar\Projects\Research Projects\MscThesis\src\optimization\Optimization.jl:663
 [12] with(::getfield(Main.MscThesis, Symbol("##73#79")){PlatypusSolver,Model}, ::Parameter{String}, ::String) at C:\Users\catar\Projects\Research Projects\MscThesis\src\Parameters.jl:20
 [13] #1 at C:\Users\catar\Projects\Research Projects\MscThesis\src\Parameters.jl:28 [inlined]
 [14] with(::getfield(Main.MscThesis, Symbol("##1#2")){getfield(Main.MscThesis, Symbol("##73#79")){PlatypusSolver,Model},Tuple{Parameter{String},String}}, ::Parameter{String}, ::String) at C:\Users\catar\Projects\Research Projects\MscThesis\src\Parameters.jl:20
 [15] with(::Function, ::Parameter{String}, ::String, ::Parameter{String}, ::Vararg{Any,N} where N) at C:\Users\catar\Projects\Research Projects\MscThesis\src\Parameters.jl:26
 [16] solve(::PlatypusSolver, ::Model) at C:\Users\catar\Projects\Research Projects\MscThesis\src\optimization\Optimization.jl:634
 [17] solve(::Type, ::Dict{Symbol,Int64}, ::Model, ::Int64, ::Bool) at C:\Users\catar\Projects\Research Projects\MscThesis\src\MscThesis.jl:117
 [18] (::getfield(Main.MscThesis, Symbol("##96#97")){Int64,Model,Int64,String,Array{DataType,1},Array{Dict{Symbol,Int64},1}})() at C:\Users\catar\Projects\Research Projects\MscThesis\src\Benchmark.jl:64
 [19] with(::getfield(Main.MscThesis, Symbol("##96#97")){Int64,Model,Int64,String,Array{DataType,1},Array{Dict{Symbol,Int64},1}}, ::Parameter{String}, ::String) at C:\Users\catar\Projects\Research Projects\MscThesis\src\Parameters.jl:20
 [20] #benchmark#95(::String, ::Int64, ::Array{Tuple{DataType,Dict{Symbol,Int64}},1}, ::Model, ::Int64, ::Function) at C:\Users\catar\Projects\Research Projects\MscThesis\src\Benchmark.jl:59
 [21] (::getfield(Main.MscThesis, Symbol("#kw##benchmark")))(::NamedTuple{(:nruns, :algorithms, :problem, :max_evals),Tuple{Int64,Array{Tuple{DataType,Dict{Symbol,Int64}},1},Model,Int64}}, ::typeof(benchmark)) at .\none:0
 [22] top-level scope at C:\Users\catar\Projects\Research Projects\MscThesis\examples\CaseStudyIP_Conic.jl:71
 [23] include_string(::Module, ::String, ::String) at .\loading.jl:1008
 [24] include_string(::Module, ::String, ::String, ::Int64) at C:\Users\catar\.julia\packages\CodeTools\xGemk\src\eval.jl:30
 [25] (::getfield(Atom, Symbol("##114#119")){String,Int64,String})() at C:\Users\catar\.julia\packages\Atom\UtmXq\src\eval.jl:94
 [26] withpath(::getfield(Atom, Symbol("##114#119")){String,Int64,String}, ::String) at C:\Users\catar\.julia\packages\CodeTools\xGemk\src\utils.jl:30
 [27] withpath at C:\Users\catar\.julia\packages\Atom\UtmXq\src\eval.jl:46 [inlined]
 [28] #113 at C:\Users\catar\.julia\packages\Atom\UtmXq\src\eval.jl:93 [inlined]
 [29] with_logstate(::getfield(Atom, Symbol("##113#118")){String,Int64,String}, ::Base.CoreLogging.LogState) at .\logging.jl:395
 [30] #112 at .\logging.jl:491 [inlined]
 [31] hideprompt(::getfield(Atom, Symbol("##112#117")){String,Int64,String}) at C:\Users\catar\.julia\packages\Atom\UtmXq\src\repl.jl:87
 [32] macro expansion at C:\Users\catar\.julia\packages\Atom\UtmXq\src\eval.jl:91 [inlined]
 [33] (::getfield(Atom, Symbol("##111#116")))(::Dict{String,Any}) at C:\Users\catar\.julia\packages\Atom\UtmXq\src\eval.jl:86
 [34] handlemsg(::Dict{String,Any}, ::Dict{String,Any}) at C:\Users\catar\.julia\packages\Atom\UtmXq\src\comm.jl:164
 [35] (::getfield(Atom, Symbol("##19#21")){Array{Any,1}})() at .\task.jl:259

>>>>> Error <<<<<
,PyError ($(Expr(:escape, :(ccall(#= C:\Users\catar\.julia\packages\PyCall\RQjD7\src\pyfncall.jl:44 =# @pysym(:PyObject_Call), PyPtr, (PyPtr, PyPtr, PyPtr), o, pyargsptr, kw))))) <class 'RuntimeError'>
RuntimeError('Julia exception: DomainError with -0.40000000000000013:\nsqrt will only return a complex result if called with a complex argument. Try sqrt(Complex(x)).\nStacktrace:\n [1] throw_complex_domainerror(::Symbol, ::Float64) at .\\math.jl:31\n [2] sqrt at .\\math.jl:492 [inlined]\n [3] #conic_cost_function#9(::Float64, ::Function, ::Array{Int64,1}) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\examples\\CaseStudyIP_Conic.jl:19\n [4] conic_cost_function(::Array{Int64,1}) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\examples\\CaseStudyIP_Conic.jl:15\n [5] apply(::Objective, ::Array{Int64,1}) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\Optimization.jl:218\n [6] evaluate(::Objective, ::Array{Int64,1}) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\Optimization.jl:221\n [7] #65 at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\Optimization.jl:593 [inlined]\n [8] (::getfield(Main.MscThesis, Symbol("##64#69")){Array{Int64,1}})(::Objective) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\Utils.jl:144\n [9] iterate at .\\generator.jl:47 [inlined]\n [10] collect_to!(::Array{Float64,1}, ::Base.Generator{Array{AbstractObjective,1},getfield(Main.MscThesis, Symbol("##64#69")){Array{Int64,1}}}, ::Int64, ::Int64) at .\\array.jl:651\n [11] collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{AbstractObjective,1},getfield(Main.MscThesis, Symbol("##64#69")){Array{Int64,1}}}, ::Int64) at .\\array.jl:630\n [12] _collect(::Array{AbstractObjective,1}, ::Base.Generator{Array{AbstractObjective,1},getfield(Main.MscThesis, Symbol("##64#69")){Array{Int64,1}}}, ::Base.EltypeUnknown, ::Base.HasShape{1}) at .\\array.jl:624\n [13] collect_similar at .\\array.jl:548 [inlined]\n [14] map at .\\abstractarray.jl:2018 [inlined]\n [15] macro expansion at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\Utils.jl:142 [inlined]\n [16] (::getfield(Main.MscThesis, Symbol("#eval_objectives#68")){Array{Int64,1},Array{AbstractObjective,1},typeof(Main.MscThesis.flatten)})() at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\Optimization.jl:593\n [17] evaluate(::Array{Int64,1}, ::Array{AbstractObjective,1}, ::Array{Constraint,1}, ::typeof(Main.MscThesis.flatten)) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\Optimization.jl:605\n [18] evaluate at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\Optimization.jl:590 [inlined]\n [19] (::getfield(Main.MscThesis, Symbol("##154#155")){Array{AbstractObjective,1},Array{Constraint,1}})(::Array{Int64,1}) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\solvers\\PlatypusSolver.jl:10\n [20] #invokelatest#1(::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}, ::Function, ::Any, ::Any, ::Vararg{Any,N} where N) at .\\essentials.jl:742\n [21] invokelatest(::Any, ::Any, ::Vararg{Any,N} where N) at .\\essentials.jl:741\n [22] _pyjlwrap_call(::Function, ::Ptr{PyCall.PyObject_struct}, ::Ptr{PyCall.PyObject_struct}) at C:\\Users\\catar\\.julia\\packages\\PyCall\\RQjD7\\src\\callback.jl:28\n [23] pyjlwrap_call(::Ptr{PyCall.PyObject_struct}, ::Ptr{PyCall.PyObject_struct}, ::Ptr{PyCall.PyObject_struct}) at C:\\Users\\catar\\.julia\\packages\\PyCall\\RQjD7\\src\\callback.jl:49\n [24] macro expansion at C:\\Users\\catar\\.julia\\packages\\PyCall\\RQjD7\\src\\exception.jl:81 [inlined]\n [25] __pycall!(::PyCall.PyObject, ::Ptr{PyCall.PyObject_struct}, ::PyCall.PyObject, ::Ptr{Nothing}) at C:\\Users\\catar\\.julia\\packages\\PyCall\\RQjD7\\src\\pyfncall.jl:44\n [26] _pycall!(::PyCall.PyObject, ::PyCall.PyObject, ::Tuple{Int64}, ::Int64, ::Ptr{Nothing}) at C:\\Users\\catar\\.julia\\packages\\PyCall\\RQjD7\\src\\pyfncall.jl:29\n [27] #call#101 at C:\\Users\\catar\\.julia\\packages\\PyCall\\RQjD7\\src\\pyfncall.jl:11 [inlined]\n [28] (::PyCall.PyObject)(::Int64) at C:\\Users\\catar\\.julia\\packages\\PyCall\\RQjD7\\src\\pyfncall.jl:89\n [29] #solve#99(::Int64, ::Bool, ::Bool, ::Bool, ::Bool, ::Function, ::NSGAII) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\solvers\\Platypus.jl:261\n [30] (::getfield(Main.MscThesis.Platypus, Symbol("#kw##solve")))(::NamedTuple{(:max_eval, :nondominated),Tuple{Int64,Bool}}, ::typeof(Main.MscThesis.Platypus.solve), ::NSGAII) at .\\none:0\n [31] solve_it(::PlatypusSolver, ::Model) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\solvers\\PlatypusSolver.jl:292\n [32] (::getfield(Main.MscThesis, Symbol("##73#79")){PlatypusSolver,Model})() at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\Optimization.jl:663\n [33] with(::getfield(Main.MscThesis, Symbol("##73#79")){PlatypusSolver,Model}, ::Parameter{String}, ::String) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\Parameters.jl:20\n [34] #1 at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\Parameters.jl:28 [inlined]\n [35] with(::getfield(Main.MscThesis, Symbol("##1#2")){getfield(Main.MscThesis, Symbol("##73#79")){PlatypusSolver,Model},Tuple{Parameter{String},String}}, ::Parameter{String}, ::String) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\Parameters.jl:20\n [36] with(::Function, ::Parameter{String}, ::String, ::Parameter{String}, ::Vararg{Any,N} where N) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\Parameters.jl:26\n [37] solve(::PlatypusSolver, ::Model) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\optimization\\Optimization.jl:634\n [38] solve(::Type, ::Dict{Symbol,Int64}, ::Model, ::Int64, ::Bool) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\MscThesis.jl:117\n [39] (::getfield(Main.MscThesis, Symbol("##96#97")){Int64,Model,Int64,String,Array{DataType,1},Array{Dict{Symbol,Int64},1}})() at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\Benchmark.jl:64\n [40] with(::getfield(Main.MscThesis, Symbol("##96#97")){Int64,Model,Int64,String,Array{DataType,1},Array{Dict{Symbol,Int64},1}}, ::Parameter{String}, ::String) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\Parameters.jl:20\n [41] #benchmark#95(::String, ::Int64, ::Array{Tuple{DataType,Dict{Symbol,Int64}},1}, ::Model, ::Int64, ::Function) at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\src\\Benchmark.jl:59\n [42] (::getfield(Main.MscThesis, Symbol("#kw##benchmark")))(::NamedTuple{(:nruns, :algorithms, :problem, :max_evals),Tuple{Int64,Array{Tuple{DataType,Dict{Symbol,Int64}},1},Model,Int64}}, ::typeof(benchmark)) at .\\none:0\n [43] top-level scope at C:\\Users\\catar\\Projects\\Research Projects\\MscThesis\\examples\\CaseStudyIP_Conic.jl:71\n [44] include_string(::Module, ::String, ::String) at .\\loading.jl:1008\n [45] include_string(::Module, ::String, ::String, ::Int64) at C:\\Users\\catar\\.julia\\packages\\CodeTools\\xGemk\\src\\eval.jl:30\n [46] (::getfield(Atom, Symbol("##114#119")){String,Int64,String})() at C:\\Users\\catar\\.julia\\packages\\Atom\\UtmXq\\src\\eval.jl:94\n [47] withpath(::getfield(Atom, Symbol("##114#119")){String,Int64,String}, ::String) at C:\\Users\\catar\\.julia\\packages\\CodeTools\\xGemk\\src\\utils.jl:30\n [48] withpath at C:\\Users\\catar\\.julia\\packages\\Atom\\UtmXq\\src\\eval.jl:46 [inlined]\n [49] #113 at C:\\Users\\catar\\.julia\\packages\\Atom\\UtmXq\\src\\eval.jl:93 [inlined]\n [50] with_logstate(::getfield(Atom, Symbol("##113#118")){String,Int64,String}, ::Base.CoreLogging.LogState) at .\\logging.jl:395\n [51] #112 at .\\logging.jl:491 [inlined]\n [52] hideprompt(::getfield(Atom, Symbol("##112#117")){String,Int64,String}) at C:\\Users\\catar\\.julia\\packages\\Atom\\UtmXq\\src\\repl.jl:87\n [53] macro expansion at C:\\Users\\catar\\.julia\\packages\\Atom\\UtmXq\\src\\eval.jl:91 [inlined]\n [54] (::getfield(Atom, Symbol("##111#116")))(::Dict{String,Any}) at C:\\Users\\catar\\.julia\\packages\\Atom\\UtmXq\\src\\eval.jl:86\n [55] handlemsg(::Dict{String,Any}, ::Dict{String,Any}) at C:\\Users\\catar\\.julia\\packages\\Atom\\UtmXq\\src\\comm.jl:164',)
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\core.py", line 405, in run
    self.step()
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\algorithms.py", line 181, in step
    self.initialize()
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\algorithms.py", line 191, in initialize
    super(NSGAII, self).initialize()
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\algorithms.py", line 72, in initialize
    self.evaluate_all(self.population)
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\core.py", line 378, in evaluate_all
    results = self.evaluator.evaluate_all(jobs)
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\evaluator.py", line 88, in evaluate_all
    return list(self.map_func(run_job, jobs))
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\evaluator.py", line 55, in run_job
    job.run()
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\core.py", line 345, in run
    self.solution.evaluate()
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\core.py", line 518, in evaluate
    self.problem(self)
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\core.py", line 162, in __call__
    self.evaluate(solution)
  File "C:\Users\catar\Programs\Anaconda3\envs\conda_jl\lib\site-packages\platypus\core.py", line 186, in evaluate
    (objs, constrs) = self.function(solution.variables)

Stacktrace:
 [1] pyerr_check at C:\Users\catar\.julia\packages\PyCall\RQjD7\src\exception.jl:60 [inlined]
 [2] pyerr_check at C:\Users\catar\.julia\packages\PyCall\RQjD7\src\exception.jl:64 [inlined]
 [3] macro expansion at C:\Users\catar\.julia\packages\PyCall\RQjD7\src\exception.jl:84 [inlined]
 [4] __pycall!(::PyCall.PyObject, ::Ptr{PyCall.PyObject_struct}, ::PyCall.PyObject, ::Ptr{Nothing}) at C:\Users\catar\.julia\packages\PyCall\RQjD7\src\pyfncall.jl:44
 [5] _pycall!(::PyCall.PyObject, ::PyCall.PyObject, ::Tuple{Int64}, ::Int64, ::Ptr{Nothing}) at C:\Users\catar\.julia\packages\PyCall\RQjD7\src\pyfncall.jl:29
 [6] #call#101 at C:\Users\catar\.julia\packages\PyCall\RQjD7\src\pyfncall.jl:11 [inlined]
 [7] (::PyCall.PyObject)(::Int64) at C:\Users\catar\.julia\packages\PyCall\RQjD7\src\pyfncall.jl:89
 [8] #solve#99(::Int64, ::Bool, ::Bool, ::Bool, ::Bool, ::Function, ::NSGAII) at C:\Users\catar\Projects\Research Projects\MscThesis\src\optimization\solvers\Platypus.jl:261
 [9] (::getfield(Main.MscThesis.Platypus, Symbol("#kw##solve")))(::NamedTuple{(:max_eval, :nondominated),Tuple{Int64,Bool}}, ::typeof(Main.MscThesis.Platypus.solve), ::NSGAII) at .\none:0
 [10] solve_it(::PlatypusSolver, ::Model) at C:\Users\catar\Projects\Research Projects\MscThesis\src\optimization\solvers\PlatypusSolver.jl:292
 [11] (::getfield(Main.MscThesis, Symbol("##73#79")){PlatypusSolver,Model})() at C:\Users\catar\Projects\Research Projects\MscThesis\src\optimization\Optimization.jl:663
 [12] with(::getfield(Main.MscThesis, Symbol("##73#79")){PlatypusSolver,Model}, ::Parameter{String}, ::String) at C:\Users\catar\Projects\Research Projects\MscThesis\src\Parameters.jl:20
 [13] #1 at C:\Users\catar\Projects\Research Projects\MscThesis\src\Parameters.jl:28 [inlined]
 [14] with(::getfield(Main.MscThesis, Symbol("##1#2")){getfield(Main.MscThesis, Symbol("##73#79")){PlatypusSolver,Model},Tuple{Parameter{String},String}}, ::Parameter{String}, ::String) at C:\Users\catar\Projects\Research Projects\MscThesis\src\Parameters.jl:20
 [15] with(::Function, ::Parameter{String}, ::String, ::Parameter{String}, ::Vararg{Any,N} where N) at C:\Users\catar\Projects\Research Projects\MscThesis\src\Parameters.jl:26
 [16] solve(::PlatypusSolver, ::Model) at C:\Users\catar\Projects\Research Projects\MscThesis\src\optimization\Optimization.jl:634
 [17] solve(::Type, ::Dict{Symbol,Int64}, ::Model, ::Int64, ::Bool) at C:\Users\catar\Projects\Research Projects\MscThesis\src\MscThesis.jl:117
 [18] (::getfield(Main.MscThesis, Symbol("##96#97")){Int64,Model,Int64,String,Array{DataType,1},Array{Dict{Symbol,Int64},1}})() at C:\Users\catar\Projects\Research Projects\MscThesis\src\Benchmark.jl:64
 [19] with(::getfield(Main.MscThesis, Symbol("##96#97")){Int64,Model,Int64,String,Array{DataType,1},Array{Dict{Symbol,Int64},1}}, ::Parameter{String}, ::String) at C:\Users\catar\Projects\Research Projects\MscThesis\src\Parameters.jl:20
 [20] #benchmark#95(::String, ::Int64, ::Array{Tuple{DataType,Dict{Symbol,Int64}},1}, ::Model, ::Int64, ::Function) at C:\Users\catar\Projects\Research Projects\MscThesis\src\Benchmark.jl:59
 [21] (::getfield(Main.MscThesis, Symbol("#kw##benchmark")))(::NamedTuple{(:nruns, :algorithms, :problem, :max_evals),Tuple{Int64,Array{Tuple{DataType,Dict{Symbol,Int64}},1},Model,Int64}}, ::typeof(benchmark)) at .\none:0
 [22] top-level scope at C:\Users\catar\Projects\Research Projects\MscThesis\examples\CaseStudyIP_Conic.jl:71
 [23] include_string(::Module, ::String, ::String) at .\loading.jl:1008
 [24] include_string(::Module, ::String, ::String, ::Int64) at C:\Users\catar\.julia\packages\CodeTools\xGemk\src\eval.jl:30
 [25] (::getfield(Atom, Symbol("##114#119")){String,Int64,String})() at C:\Users\catar\.julia\packages\Atom\UtmXq\src\eval.jl:94
 [26] withpath(::getfield(Atom, Symbol("##114#119")){String,Int64,String}, ::String) at C:\Users\catar\.julia\packages\CodeTools\xGemk\src\utils.jl:30
 [27] withpath at C:\Users\catar\.julia\packages\Atom\UtmXq\src\eval.jl:46 [inlined]
 [28] #113 at C:\Users\catar\.julia\packages\Atom\UtmXq\src\eval.jl:93 [inlined]
 [29] with_logstate(::getfield(Atom, Symbol("##113#118")){String,Int64,String}, ::Base.CoreLogging.LogState) at .\logging.jl:395
 [30] #112 at .\logging.jl:491 [inlined]
 [31] hideprompt(::getfield(Atom, Symbol("##112#117")){String,Int64,String}) at C:\Users\catar\.julia\packages\Atom\UtmXq\src\repl.jl:87
 [32] macro expansion at C:\Users\catar\.julia\packages\Atom\UtmXq\src\eval.jl:91 [inlined]
 [33] (::getfield(Atom, Symbol("##111#116")))(::Dict{String,Any}) at C:\Users\catar\.julia\packages\Atom\UtmXq\src\eval.jl:86
 [34] handlemsg(::Dict{String,Any}, ::Dict{String,Any}) at C:\Users\catar\.julia\packages\Atom\UtmXq\src\comm.jl:164
 [35] (::getfield(Atom, Symbol("##19#21")){Array{Any,1}})() at .\task.jl:259
